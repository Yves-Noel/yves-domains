{"version":3,"sources":["Components/Search/Search.js","Components/DomainList/DomainList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","className","onSubmit","this","props","handleSubmit","placeholder","name","onChange","e","handleChange","React","Component","DomainList","handleClick","query","preventDefault","fetch","then","response","json","setState","Movies","catch","err","console","error","state","dataDomain","Domains","map","item","i","domain","App","value","target","Query","log","headers","searchGoDaddy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAwBeA,E,4JAdX,WAAU,IAAD,OACL,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,uBAAMC,SAAUC,KAAKC,MAAMC,aAA3B,UACI,uBAAOC,YAAY,iBAAiBC,KAAK,QAAOC,SAAU,SAACC,GAAD,OAAK,EAAKL,MAAMM,aAAaD,EAAG,YAC1F,uE,GARAE,IAAMC,WCoCfC,G,wDAnCX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IAMVU,YAAY,SAACL,EAAGM,GACZN,EAAEO,iBAEFC,MAAM,oDAAD,OAAqDF,EAArD,iBACRG,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CAACC,OAAQH,OAExBI,OAAM,SAAAC,GACLC,QAAQC,MAAMF,OAhBZ,EAAKG,MAAQ,CACTC,WAAY,IAHD,E,0CAsBnB,WACI,OACI,qBAAK3B,UAAU,mBAAf,SACKE,KAAKC,MAAMyB,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACpB,qBAAK/B,UAAU,cAAf,SACI,oBAAIA,UAAU,UAAd,SAAyB8B,EAAKE,UADAD,Y,GA3B7BrB,IAAMC,YC+ChBsB,E,kDA/Cb,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IAORM,aAAa,SAACD,EAAGF,GACf,IAAM4B,EAAQ1B,EAAE2B,OAAOD,MACvB,EAAKd,SAAS,CAACgB,MAAMF,KAVJ,EAanB9B,aAAa,SAACI,GACZA,EAAEO,iBACFS,QAAQa,IAAI,QAEZrB,MAAM,oDAAD,OAAqD,EAAKU,MAAMU,MAAhE,gBAAqF,CACxFE,QAAS,CACP,cAAiB,wEAGpBrB,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CAACQ,QAASV,OAEzBI,OAAM,SAAAC,GACLC,QAAQC,MAAMF,OA3BhB,EAAKG,MAAQ,CACXE,QAAS,GACTQ,MAAO,IAJQ,E,0CAkCnB,WAEE,OACE,sBAAKpC,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAQS,aAAcP,KAAKO,aAAcL,aAAcF,KAAKE,aAAcmC,cAAerC,KAAKqC,gBAC7FrC,KAAKwB,MAAME,SAAW,cAAC,EAAD,CAAYA,QAAS1B,KAAKwB,MAAME,iB,GAzC7ClB,IAAMC,WCKT6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c5dbc7bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Search.css';\r\n\r\n/**\r\n * The purpose of the search bar component is to search for domain suggestions in the app.\r\n * Home to the search buttons.\r\n */\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-fields\" >\r\n                    <form onSubmit={this.props.handleSubmit}>\r\n                        <input placeholder=\"Customer Input\" name='Query'onChange={(e)=>this.props.handleChange(e, 'Query')}/>\r\n                        <button >Get domain suggestions</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './DomainList.css';\r\n\r\n/**\r\n * The purpose of the DomainList component is to simulate what a returned list of domains would look like in the yves' domain app (after querying the GoDaddy API)\r\n * To help this simulation, the DomainList wull make use of the Domains component repeatedly.\r\n */\r\n\r\nclass DomainList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataDomain: [],\r\n        };\r\n    }\r\n\r\n    handleClick=(e, query)=>{\r\n        e.preventDefault()\r\n\r\n        fetch(`https://api.godaddy.com/v1/domains/suggest?query=${query}&waitMs=1000`)\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then(response => {\r\n      this.setState({Movies: response})\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"domain-container\">\r\n                {this.props.Domains.map((item, i) => (\r\n                    <div className=\"domain-list\" key={i}>\r\n                        <h5 className=\"domains\">{item.domain}</h5>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DomainList;\r\n","import React from 'react';\nimport './App.css';\nimport Search from './Components/Search/Search';\nimport './Components/Search/Search.css';\nimport DomainList from './Components/DomainList/DomainList';\n// import Pagination from './Components/Pagination/Pagination';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      Domains: [],\n      Query: '',\n    };\n  }\n\n  handleChange=(e, name) =>{\n    const value = e.target.value;\n    this.setState({Query:value})\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault()\n    console.log('test')\n\n    fetch(`https://api.godaddy.com/v1/domains/suggest?query=${this.state.Query}&waitMs=1000`, {\n      headers: {\n        'Authorization': 'sso-key fXfkbuG67hzG_9JHnVn6gQXv3mASZ72pNP8:GB7rnq2cDbb9R95fFa46kY'\n      }\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(response => {\n      this.setState({Domains: response})\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n\n  render() {\n   \n    return(\n      <div className=\"App\">\n        <h1>Yves' Domains</h1>\n        <Search handleChange={this.handleChange} handleSubmit={this.handleSubmit} searchGoDaddy={this.searchGoDaddy} />\n        {this.state.Domains && <DomainList Domains={this.state.Domains}/>}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}